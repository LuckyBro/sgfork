#summary How to build SGFork from SVN under Windows platform.
#labels Featured,Phase-Deploy

= Introduction =

So you want to get latest SGFork without waiting developers to put it on download section (or you are a tester ;)).
*Be aware that latest SVN version could be possible broken! Don't create new issues about it. If you want to ask developers about it - use IRC channel.*

= Getting source code =

So, you need to do the following to get the latest source code from SVN:
  * Download and install [http://tortoisesvn.net/downloads TortoiseSVN] (it will require reboot, don't forget to do it)
  * Create a folder and name it like *sgfork_source*
  * Right click on *sgfork_source* and choose _"SVN Checkout"_ from context menu
  * Go to our [http://code.google.com/p/sgfork/source/checkout checkout page]. Find our address to for checkout (http://sgfork.googlecode.com/svn/trunk/) and copy it to Tortoise checkout window.
  * Wait while whole source code will be downloaded.

= Updating source code =

Now each time when there are some updates to code, you'll have to do only _"SVN Update"_ from context menu on your *sgfork_source* folder.

= Getting MinGW&Msys =

  * Download and install [http://downloads.sourceforge.net/mingw/MinGW-5.1.4.exe MinGW]
  * Download and install [http://downloads.sourceforge.net/mingw/MSYS-1.0.10.exe Msys]
  * MinGW is your compiler and linker. Msys is command line tool.
 
= Building source code with MinGW =

  * To build source code you use Msys
  * Launch Msys
  * cd to your *sgfork_source* folder
  * type: make
  * In your *sgfork_source*/build/release-mingw32-x86 will be put all output.
  * Binaries will be put here: *sgfork_source*/build/release-mingw32-x86
  * QVMs will be put here: *sgfork_source*/build/release-mingw32-x86/smokinguns/vm

= Deploying SGFork with MinGW =
  * Get info-zip tool. [ftp://tug.ctan.org/tex-archive/tools/zip/info-zip/WIN32/ info-zip]. Grab the zip232xN.zip file. And put zip.exe from it to your MinGW/bin directory.
  * Download ba.sh script from download page: [http://sgfork.googlecode.com/files/ba.sh ba.sh]
  * Place it to *sgfork_source*
  * Open it with notepad and replace "/c/Smokin' Guns/base" path to your game path (including base directory). Double quotes are required if your path have spaces in it.

= Building source code with MS Visual Studio Express 2008 =
_You don't need Express Visual Studio if you want only to build the game. Visual Studio will be helpful only if you want to work with SGFork code_
  * Get MS Visual Studio Express from Microsoft site [http://www.microsoft.com/express/download/]
  * Install it.
  * Launch and open the project solution file: *sgfork_source*\misc\msvc\sg.sln
  * Build it with MSVC
  * Binaries will be put here: *sgfork_source*\build\sg_release
  * There won't be any QVMs. Only DLLs.
  * To build QVMs manually use the bath tool: *sgfork_source*\misc\win32\buildvm.bat

= Deploying SGFork manually =
  * Place binaries to your game directory.
  * Zip VMS and place them to your game/base directory. It should be named "sgfork-qvms.pk3" and consist of vm/`*`.qvm files on the inside.
  * Zip Other files from base directory and place them to your game/base directory. They  should be named like "sgfork-<_directory name from source base directory_>.pk3" and consist of <_directory name from source base directory_>/`*` files on the inside.

Have fun!